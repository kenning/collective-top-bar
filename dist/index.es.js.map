{"version":3,"file":"index.es.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/lib/components/Button/Button.js","../src/lib/components/TopBar/TopBar.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\n\n// import InlineStyle from '../../style'\nimport '../style-placeholder.css'\n\nconst Button = ({ info }) => {\n  const { onClick, disabled, iconSpriteStyleLine, className, text } = info\n  return (\n    <>\n      <button\n        type=\"button\"\n        className={`top-navbar-button ${className}`}\n        onClick={onClick}\n        disabled={disabled}\n      >\n        <div\n          style={{ background: iconSpriteStyleLine }}\n          className=\"top-navbar-button-sprite\"\n        />\n        <div className=\"top-navbar-button-text\">{text}</div>\n      </button>\n      {/* <InlineStyle /> */}\n    </>\n  )\n}\n\nexport default Button\n","import React, { useState } from 'react'\nimport Button from '../Button/Button'\n\nimport '../style-placeholder.css'\n\nconst MOBILE_WIDTH = 800\n\nfunction TopBar({ icons }) {\n  const [selected, setSelected] = useState(-1)\n  const onClickFactory = (idx) => (evt) => {\n    if (MOBILE_WIDTH < window.innerWidth) {\n      window.location = icons[idx].url\n    } else {\n      selected === -1 ? setSelected(idx) : setSelected(-1)\n    }\n  }\n\n  const propFactory = (idx) => {\n    return {\n      ...icons[idx],\n      key: idx,\n      onClick: onClickFactory(idx),\n    }\n  }\n\n  return (\n    <div className=\"top-navbar-wrapper\">\n      <div className=\"top-navbar-buttons\">\n        {icons.map((x, idx) => (\n          <Button info={propFactory(idx)} />\n        ))}\n      </div>\n      {selected >= 0 ? (\n        <div className=\"top-navbar-mobile-preview\">\n          <div className=\"text\">{icons[selected].text}</div>\n          <button\n            onClick={() => {\n              window.location = icons[selected].url\n            }}\n          >\n            GO\n          </button>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nTopBar.defaultProps = {\n  icons: [\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Front Page',\n      url: '/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 0px 50px',\n      disabled: false,\n      className: null,\n      text: 'News',\n      url: '/news/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Front Page',\n      url: '/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 0px 50px',\n      disabled: false,\n      className: null,\n      text: 'News',\n      url: '/news/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Front Page',\n      url: '/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 0px 50px',\n      disabled: false,\n      className: null,\n      text: 'News',\n      url: '/news/',\n    },\n  ],\n}\n\nexport default TopBar\n"],"names":["css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Button","info","onClick","disabled","iconSpriteStyleLine","className","text","React","background","MOBILE_WIDTH","TopBar","icons","useState","selected","setSelected","onClickFactory","idx","evt","window","innerWidth","location","url","propFactory","key","map","x","defaultProps"],"mappings":"qCAAA,SAAqBA,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,67NClB9C,IAAMe,EAAS,gBAAGC,IAAAA,KACRC,EAA4DD,EAA5DC,QAASC,EAAmDF,EAAnDE,SAAUC,EAAyCH,EAAzCG,oBAAqBC,EAAoBJ,EAApBI,UAAWC,EAASL,EAATK,YAEzDC,gCACEA,0BACEd,KAAK,SACLY,sCAAgCA,GAChCH,QAASA,EACTC,SAAUA,GAEVI,uBACEhB,MAAO,CAAEiB,WAAYJ,GACrBC,UAAU,6BAEZE,uBAAKF,UAAU,0BAA0BC,k1BCdjD,IAAMG,EAAe,IAErB,SAASC,SAASC,IAAAA,UACgBC,GAAU,MAAnCC,OAAUC,OACXC,EAAiB,SAACC,UAAQ,SAACC,GAC3BR,EAAeS,OAAOC,WACxBD,OAAOE,SAAWT,EAAMK,GAAKK,IAEXP,GAAJ,IAAdD,EAA8BG,GAAoB,KAIhDM,EAAc,SAACN,6VAEdL,EAAMK,IACTO,IAAKP,EACLd,QAASa,EAAeC,aAK1BT,uBAAKF,UAAU,sBACbE,uBAAKF,UAAU,sBACZM,EAAMa,KAAI,SAACC,EAAGT,UACbT,gBAACP,GAAOC,KAAMqB,EAAYN,SAG7BH,GAAY,EACXN,uBAAKF,UAAU,6BACbE,uBAAKF,UAAU,QAAQM,EAAME,GAAUP,MACvCC,0BACEL,QAAS,WACPgB,OAAOE,SAAWT,EAAME,GAAUQ,aAMtC,MAKVX,EAAOgB,aAAe,CACpBf,MAAO,CACL,CACEP,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,aACNe,IAAK,KAEP,CACEjB,oBACE,4EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,OACNe,IAAK,UAEP,CACEjB,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,aACNe,IAAK,KAEP,CACEjB,oBACE,4EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,OACNe,IAAK,UAEP,CACEjB,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,aACNe,IAAK,KAEP,CACEjB,oBACE,4EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,OACNe,IAAK"}