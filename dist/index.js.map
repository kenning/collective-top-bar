{"version":3,"file":"index.js","sources":["../node_modules/style-inject/dist/style-inject.es.js","../src/lib/components/Button/Button.js","../src/lib/components/TopBar/TopBar.js"],"sourcesContent":["function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import React from 'react'\n\n// import InlineStyle from '../../style'\nimport '../style-placeholder.css'\n\nconst Button = ({ info }) => {\n  const { onClick, disabled, iconSpriteStyleLine, className, text, key } = info\n  return (\n    <button\n      type=\"button\"\n      className={`top-navbar-button ${className}`}\n      onClick={onClick}\n      disabled={disabled}\n      key={key}\n    >\n      <div\n        style={{ background: iconSpriteStyleLine }}\n        className=\"top-navbar-button-sprite\"\n      />\n      <div className=\"top-navbar-button-text\">{text}</div>\n    </button>\n  )\n}\n\nexport default Button\n","import React from 'react'\nimport Button from '../Button/Button'\n\nimport '../style-placeholder.css'\n\nconst MOBILE_WIDTH = 800\n\nclass TopBar extends React.Component {\n  state = {\n    selected: -1,\n  }\n\n  render() {\n    const { icons } = this.props\n    const { selected } = this.state\n    const setSelected = (x) => {\n      this.setState({ selected: x })\n    }\n    const onClickFactory = (idx) => (evt) => {\n      debugger\n      if (MOBILE_WIDTH < window.innerWidth) {\n        window.location = icons[idx].url\n      } else {\n        selected === -1 ? setSelected(idx) : setSelected(-1)\n      }\n    }\n\n    const propFactory = (idx) => {\n      return {\n        ...icons[idx],\n        key: idx,\n        onClick: onClickFactory(idx),\n      }\n    }\n\n    return (\n      <div className=\"top-navbar-wrapper\">\n        <div className=\"top-navbar-buttons\">\n          {icons.map((x, idx) => (\n            <Button info={propFactory(idx)} />\n          ))}\n        </div>\n        {selected >= 0 ? (\n          <div className=\"top-navbar-mobile-preview\">\n            <div className=\"text\">{icons[selected].text}</div>\n            <button\n              onClick={() => {\n                window.location = icons[selected].url\n              }}\n            >\n              GO\n            </button>\n          </div>\n        ) : null}\n      </div>\n    )\n  }\n}\n\nTopBar.defaultProps = {\n  icons: [\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Front Page',\n      url: '/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Library',\n      url: '/library/docs/welcome',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Blog',\n      url: '/library/blog/',\n    },\n    {\n      iconSpriteStyleLine:\n        'url(http://localhost:3000/library/blog/assets/blog1/dilbert.png) 107px 71px',\n      disabled: false,\n      className: null,\n      text: 'Links',\n      url: '/library/links/',\n    },\n  ],\n}\n\nexport default TopBar\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","Button","info","onClick","disabled","iconSpriteStyleLine","className","text","key","React","background","MOBILE_WIDTH","TopBar","selected","Component","icons","this","props","state","setSelected","x","_this2","setState","onClickFactory","idx","evt","window","innerWidth","location","url","propFactory","map","defaultProps"],"mappings":"oMAAA,SAASA,YAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAME,KAAO,WAEI,QAAbN,GACEE,EAAKK,WACPL,EAAKM,aAAaJ,EAAOF,EAAKK,YAKhCL,EAAKO,YAAYL,GAGfA,EAAMM,WACRN,EAAMM,WAAWC,QAAUb,EAE3BM,EAAMK,YAAYR,SAASW,eAAed,o9NClB9C,IAAMe,OAAS,gBAAGC,IAAAA,KACRC,EAAiED,EAAjEC,QAASC,EAAwDF,EAAxDE,SAAUC,EAA8CH,EAA9CG,oBAAqBC,EAAyBJ,EAAzBI,UAAWC,EAAcL,EAAdK,KAAMC,EAAQN,EAARM,WAE/DC,8BACEf,KAAK,SACLY,sCAAgCA,GAChCH,QAASA,EACTC,SAAUA,EACVI,IAAKA,GAELC,2BACEjB,MAAO,CAAEkB,WAAYL,GACrBC,UAAU,6BAEZG,2BAAKH,UAAU,0BAA0BC,o4DCd/C,IAAMI,aAAe,IAEfC,wRACI,CACNC,UAAW,yBAFMJ,MAAMK,qEAMfC,EAAUC,KAAKC,MAAfF,MACAF,EAAaG,KAAKE,MAAlBL,SACFM,EAAc,SAACC,GACnBC,EAAKC,SAAS,CAAET,SAAUO,KAEtBG,EAAiB,SAACC,UAAQ,SAACC,GAE3Bd,aAAee,OAAOC,WACxBD,OAAOE,SAAWb,EAAMS,GAAKK,IAEXV,GAAJ,IAAdN,EAA8BW,GAAoB,KAIhDM,EAAc,SAACN,4BAEdT,EAAMS,IACThB,IAAKgB,EACLrB,QAASoB,EAAeC,aAK1Bf,2BAAKH,UAAU,sBACbG,2BAAKH,UAAU,sBACZS,EAAMgB,KAAI,SAACX,EAAGI,UACbf,oBAACR,QAAOC,KAAM4B,EAAYN,SAG7BX,GAAY,EACXJ,2BAAKH,UAAU,6BACbG,2BAAKH,UAAU,QAAQS,EAAMF,GAAUN,MACvCE,8BACEN,QAAS,WACPuB,OAAOE,SAAWb,EAAMF,GAAUgB,aAMtC,eAMZjB,OAAOoB,aAAe,CACpBjB,MAAO,CACL,CACEV,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,aACNsB,IAAK,KAEP,CACExB,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,UACNsB,IAAK,yBAEP,CACExB,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,OACNsB,IAAK,kBAEP,CACExB,oBACE,8EACFD,UAAU,EACVE,UAAW,KACXC,KAAM,QACNsB,IAAK"}